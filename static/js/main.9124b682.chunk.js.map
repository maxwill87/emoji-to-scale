{"version":3,"sources":["getData.js","data/random.csv","data/travel.csv","data/nature.csv","data/objects.csv","app.jsx","index.js"],"names":["dataSources","isNumber","val","String","Number","async","getData","meta","dataObj","dataSourcesPromises","map","source","fetch","then","response","text","dataRaw","trim","split","splice","Promise","all","values","flat","fetchMultiple","reduce","acc","row","emoji","label","src","console","warn","key","includes","replace","terms","deepValue","Object","entries","sort","a","b","filter","emojiSpace","parseSize","size","Math","round","App","data","dataSet","useState","scroll","scrollSet","useEffect","res","totalScrollRange","length","window","innerHeight","document","body","style","height","requestAnimationFrame","loop","newScroll","pageYOffset","className","idx","windowWidth","innerWidth","relativeDistance","emojisToScale","floor","ceil","floorCeilProgress","floatScale","calculatedScale","min","opacity","diff","max","transform","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9124b682.chunk.js","sourcesContent":["import dataRandom from './data/random.csv';\nimport dataTravel from './data/travel.csv';\nimport dataNature from './data/nature.csv';\nimport dataObjects from './data/objects.csv';\n\nconst dataSources = [dataRandom, dataTravel, dataNature, dataObjects];\n\nasync function fetchMultiple() {\n  const dataSourcesPromises = dataSources.map((source) =>\n    fetch(source)\n      .then((response) => response.text())\n      .then((dataRaw) => {\n        return dataRaw.trim().split(`\\n`).splice(1);\n      })\n  );\n\n  return Promise.all(dataSourcesPromises).then((values) => {\n    return values.flat();\n  });\n}\nfunction isNumber(val) {\n  return String(Number(val)) === val;\n}\n\nexport async function getData() {\n  let meta = {};\n\n  const dataCombined = await fetchMultiple();\n\n  let dataObj = dataCombined.reduce((acc, row) => {\n    const [emoji, source, label, src] = row.split(`,`);\n    if (source === '?') {\n      return acc;\n    }\n\n    if (meta[emoji]) {\n      console.warn('REPEATED', emoji);\n    }\n\n    acc[emoji] = source;\n    meta[emoji] = { source, label, src };\n    return acc;\n  }, {});\n\n  for (const key in dataObj) {\n    const val = dataObj[key];\n    if (dataObj[key].includes('km')) {\n      dataObj[key] = Number(val.replace('km', '')) * 100 * 1000;\n    } else if (dataObj[key].includes('m')) {\n      dataObj[key] = Number(val.replace('m', '')) * 100;\n    } else if (isNumber(dataObj[key])) {\n      dataObj[key] = Number(val);\n    } else if (dataObj[val]) {\n      dataObj[key] = dataObj[val];\n    } else if (val.includes(`*`)) {\n      const terms = val.split(`*`).map((deepValue) => {\n        if (isNumber(deepValue)) {\n          return Number(deepValue);\n        } else if (dataObj[deepValue]) {\n          return dataObj[deepValue];\n        }\n        return deepValue;\n      });\n      dataObj[key] = terms[0] * terms[1];\n    }\n  }\n\n  return Object.entries(dataObj)\n    .sort((a, b) => {\n      return a[1] - b[1];\n    })\n    .map((emoji) => {\n      return [emoji[0], emoji[1], meta[emoji[0]].label];\n    })\n    .filter((emoji) => {\n      return emoji[1] !== '?';\n    });\n}\n","export default __webpack_public_path__ + \"static/media/random.fa8c1081.csv\";","export default __webpack_public_path__ + \"static/media/travel.a1375366.csv\";","export default __webpack_public_path__ + \"static/media/nature.d9febfcc.csv\";","export default __webpack_public_path__ + \"static/media/objects.824019ca.csv\";","import { useEffect, useState } from 'react';\nimport { getData } from './getData.js';\n\nconst emojiSpace = 300;\n\nfunction parseSize(size) {\n  if (size < 2) {\n    return `${size * 10}mm`;\n  }\n  if (size < 100) {\n    return `${size}cm`;\n  }\n  if (size < 100 * 1000) {\n    return `${Math.round(size * 100) / 100 / 100}m`;\n  }\n  return `${Math.round(size / 100 / 10) / 100}km`;\n}\n\nfunction App() {\n  const [data, dataSet] = useState([]);\n  const [scroll, scrollSet] = useState(0);\n\n  useEffect(() => {\n    getData().then((res) => {\n      const totalScrollRange = emojiSpace * res.length + window.innerHeight - emojiSpace;\n      document.body.style.height = `${totalScrollRange}px`;\n      dataSet(res);\n    });\n\n    function loop() {\n      const newScroll = window.pageYOffset;\n      scrollSet(newScroll);\n      window.requestAnimationFrame(loop);\n    }\n    window.requestAnimationFrame(loop);\n  }, []);\n\n  return (\n    <div className=\"emoji-display\">\n      {data.map(([emoji, size, label], idx) => {\n        const windowWidth = window.innerWidth;\n        const compoundDistance = windowWidth / 2 + idx * emojiSpace;\n\n        let relativeDistance = compoundDistance - scroll - emojiSpace / 2;\n\n        // Slow the scrolling at the beginning of the screen\n        if (relativeDistance < windowWidth / 2) {\n          relativeDistance =\n            relativeDistance * 0.1 + (0.9 * (relativeDistance + windowWidth * 0.5)) / 2;\n        }\n\n        // Don't render the emoji if out of window\n        if (\n          relativeDistance < -emojiSpace * 0.75 ||\n          relativeDistance > windowWidth - emojiSpace * 0.1\n        ) {\n          return null;\n        }\n\n        let emojisToScale = [Math.floor(scroll / emojiSpace), Math.ceil(scroll / emojiSpace)];\n\n        emojisToScale = emojisToScale\n          .map((idx) => {\n            if (idx < 0) return 0;\n            if (idx > data.length - 1) return data.length - 1;\n            return idx;\n          })\n          .map((idx) => data[idx]);\n\n        const floorCeilProgress = (scroll / emojiSpace) % 1;\n        const floatScale =\n          floorCeilProgress * emojisToScale[1][1] + (1 - floorCeilProgress) * emojisToScale[0][1];\n\n        const calculatedScale = Math.min(size / floatScale, 64);\n\n        let opacity = 1;\n        if (calculatedScale > 3) {\n          const diff = (calculatedScale - 3) / 8;\n          opacity = Math.max(1 - diff, 0);\n        }\n\n        return (\n          <div\n            className=\"emoji-container\"\n            style={{\n              transform: `translatex(${relativeDistance}px)`\n              // left: `${relativeDistance}px`\n            }}\n            key={emoji}\n          >\n            <div\n              className=\"emoji\"\n              style={{\n                opacity,\n                transform: `scale(${calculatedScale}) translateY(10%)`\n              }}\n            >\n              {emoji}\n            </div>\n            <div>{parseSize(size)}</div>\n            <div>{label}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","import \"./style.css\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}