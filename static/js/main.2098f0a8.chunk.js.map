{"version":3,"sources":["emoji-data.csv","getData.js","app.jsx","index.js"],"names":["isNumber","val","String","Number","parseSize","size","Math","round","App","data","dataSet","useState","scroll","scrollSet","compoundDistance","window","innerWidth","useEffect","async","meta","fetch","dataCsvUrl","then","response","text","dataRaw","dataObj","trim","split","splice","reduce","acc","row","emoji","source","label","src","key","includes","terms","map","deepValue","Object","entries","sort","a","b","getData","res","document","body","style","height","length","innerHeight","requestAnimationFrame","loop","newScroll","pageYOffset","className","href","flex","fontSize","width","relativeDistance","emojisToScale","floor","ceil","idx","floorCeilProgress","floatScale","calculatedScale","min","transform","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2098f0a8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/emoji-data.6291e6e3.csv\";","import dataCsvUrl from './emoji-data.csv';\n\nfunction isNumber(val) {\n  return String(Number(val)) === val;\n}\n\nexport async function getData() {\n  let meta = {}\n\n  return fetch(dataCsvUrl)\n    .then((response) => response.text())\n    .then((dataRaw) => {\n      let dataObj = dataRaw\n        .trim()\n        .split(`\\n`)\n        .splice(1)\n        .reduce((acc, row) => {\n          const [emoji, source, label, src] = row.split(`,`);\n          acc[emoji] = source;\n          meta[emoji] = {source, label, src}\n          return acc;\n        }, {});\n\n      for (const key in dataObj) {\n        const val = dataObj[key];\n        if (isNumber(dataObj[key])) {\n          dataObj[key] = Number(val);\n        } else if (dataObj[val]) {\n          dataObj[key] = dataObj[val];\n        } else if (val.includes(`*`)) {\n          const terms = val.split(`*`).map((deepValue) => {\n            if (isNumber(deepValue)) {\n              return Number(deepValue);\n            } else if (dataObj[deepValue]) {\n              return dataObj[deepValue];\n            }\n            return deepValue;\n          });\n          dataObj[key] = terms[0] * terms[1];\n        }\n      }\n\n      return Object.entries(dataObj).sort((a, b) => {\n        return a[1] - b[1];\n      }).map(emoji => {\n        return [emoji[0], emoji[1], meta[emoji[0]].label]\n      });\n    });\n}\n","import { useEffect, useState, Fragment } from 'react';\nimport { getData } from './getData.js';\n\nfunction parseSize(size) {\n  if (size < 2) {\n    return `${size * 10}mm`;\n  }\n  if (size < 100) {\n    return `${size}cm`;\n  }\n  if (size < 100 * 1000) {\n    return `${Math.round(size * 100) / 10000}m`;\n  }\n  return `${Math.round(size / 100 / 10)}km`;\n}\n\nfunction App() {\n  const [data, dataSet] = useState([]);\n  const [scroll, scrollSet] = useState(0);\n\n  let compoundDistance = window.innerWidth / 2;\n\n  useEffect(() => {\n    getData().then((res) => {\n      dataSet(res);\n      document.body.style.height = `${256 * res.length + window.innerHeight}px`;\n    });\n\n    function loop() {\n      const newScroll = window.pageYOffset;\n      scrollSet(newScroll);\n      window.requestAnimationFrame(loop);\n    }\n    window.requestAnimationFrame(loop);\n  }, []);\n\n  return (\n    <Fragment>\n      <div className=\"bg\" />\n\n      <div className=\"header\">\n        <div>\n          <h1>Emoji to Scale</h1>\n          <a href=\"https://github.com/javierbyte/emoji-to-scale\">+ Info</a>\n        </div>\n        <div style={{ flex: 1 }} />\n        <a href=\"https://javier.xyz/\">\n          <h1>by javierbyte</h1>\n        </a>\n      </div>\n\n      <div className=\"footer\">\n        <h2>\n          Scroll <span style={{ fontSize: 28 }}>â†“</span>\n        </h2>\n      </div>\n\n      <div className=\"emoji-display\">\n        {data.map(([emoji, size, label]) => {\n          const width = window.innerWidth;\n          let relativeDistance = compoundDistance - scroll;\n\n          if (relativeDistance < width / 2) {\n            relativeDistance =\n              relativeDistance * 0.25 + (0.75 * (relativeDistance + width * 0.5)) / 2;\n          }\n\n          compoundDistance += 256;\n\n          if (relativeDistance < -256 || relativeDistance > width) {\n            return null;\n          }\n\n          let emojisToScale = [Math.floor(scroll / 256), Math.ceil(scroll / 256)];\n\n          emojisToScale = emojisToScale\n            .map((idx) => {\n              if (idx < 0) return 0;\n              if (idx > data.length - 1) return data.length - 1;\n              return idx;\n            })\n            .map((idx) => data[idx]);\n\n          const floorCeilProgress = (scroll / 256) % 1;\n          const floatScale =\n            floorCeilProgress * emojisToScale[1][1] + (1 - floorCeilProgress) * emojisToScale[0][1];\n\n          const calculatedScale = Math.min(size / floatScale, 1000);\n\n          return (\n            <div\n              className=\"emoji-container\"\n              style={{\n                transform: `translatex(${relativeDistance}px)`\n              }}\n              key={emoji}\n            >\n              <div\n                className=\"emoji\"\n                style={{\n                  transform: `scale(${calculatedScale}) translateY(10%)`\n                }}\n              >\n                {emoji}\n              </div>\n              <div>{parseSize(size)}</div>\n              <div>{label}</div>\n            </div>\n          );\n        })}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import \"./style.css\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}